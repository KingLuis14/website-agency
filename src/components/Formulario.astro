<form class="form">
  <div class="form__group" data-group="name">
    <label for="name">Nombre</label>
    <input
      id="name"
      required
      type="text"
      name="name"
      placeholder="mario lopez"
    />
    <small id="error-name" class="form__error"> </small>
  </div>
  <div class="form__group" data-group="numero">
    <label for="numero">Numero</label>
    <input
      id="numero"
      required
      type="tel"
      name="numero"
      placeholder="589 945 647"
    />
    <small id="error-numero" class="form__error"> </small>
  </div>
  <div class="form__group" data-group="email">
    <label for="email">E-mail</label>
    <input
      id="email"
      required
      type="email"
      name="email"
      placeholder="correo@gmail.com"
    />
    <small id="error-mail" class="form__error"> </small>
  </div>

  <input type="submit" class="button button--accent" value="Enviar" />
</form>

<style lang="scss">
  .form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;

    &__group {
      // background-color: crimson;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;

      > input {
        padding: 1em 0.75em;
        border: 2px solid rgb(178, 178, 178);
      }

      &[data-error] {
        > input {
          border-color: crimson;
          background-color: rgb(255, 225, 232) !important;
        }
        .form__error {
          // background-color: crimson;
          margin-top: -0.5rem;
          color: crimson;
        }
      }
    }

    &__error {
      // background-color: crimson;
      margin-top: -0.5rem;
    }
  }
</style>

<script>
  import { actions, isInputError } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  document.getElementById("numero")?.addEventListener("input", function (e) {
    const $Element = e.target as HTMLInputElement;
    let value = $Element.value.replace(/\D/g, ""); // Remover caracteres que no sean números

    // Agrupar en bloques de 3 dígitos
    let formattedValue = value.match(/.{1,3}/g)?.join(" ") || value;

    // Asignar el valor formateado al input
    $Element.value = formattedValue;
  });

  const form = document.querySelector("form");
  // console.log(form);
  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const formData = new FormData(form);
    const { error, data } = await actions.newsletter(formData);

    const $errorGroup =
      document.querySelectorAll<HTMLInputElement>(`.form__group`);
    $errorGroup.forEach((group) => {
      const $formError = group?.querySelector(".form__error"); //
        if ($formError) {
          $formError.textContent = ""; 
        }
      group.removeAttribute("data-error");
    });

    if (isInputError(error)) {
      // Manejar errores de entrada.
      const fieldsWithErrors = Object.entries(error.fields);

      fieldsWithErrors.forEach(([field, messages]) => {
        const message = messages.join(", ");
        const $errorGroup = document.querySelector(
          `.form__group[data-group="${field}"`
        );
        $errorGroup?.removeAttribute("data-error");
        $errorGroup?.setAttribute("data-error", "");
        const $formError = $errorGroup?.querySelector(".form__error"); //
        if ($formError) {
          $formError.textContent = message || ""; 
        }
      });
    } else {
      form.reset();
    }

   
  });
</script>
